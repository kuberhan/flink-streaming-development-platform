<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flink.streaming.web.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.flink.streaming.web.model.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>


  <sql id="Base_Column_List">
    id, username, name, password, status, is_deleted, create_time, edit_time, creator, editor
  </sql>

  <select id="selectByUsername" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{username} and  is_deleted=0
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{userid} and is_deleted=0
  </select>

    <insert id="insert" parameterType="com.flink.streaming.web.model.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (username, name, password, status, is_deleted, create_time, edit_time, creator, editor)
        values (#{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
        0, now(), now(), #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR})
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.flink.streaming.web.model.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="editor != null">
                editor = #{editor,jdbcType=VARCHAR},
            </if>
        </set>
        where username = #{username,jdbcType=VARCHAR} and is_deleted=0
    </update>

    <update id="updateByUserIdSelective" parameterType="com.flink.streaming.web.model.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="editor != null">
                editor = #{editor,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} and is_deleted=0
    </update>


    <select id="findAll"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where is_deleted=0
    </select>
    
    <select id="queryAllByPage" parameterType="com.flink.streaming.web.model.page.PageParam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where is_deleted=0
        order by id
    </select>

</mapper>
